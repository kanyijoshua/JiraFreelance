// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jirafrelance.Models;

namespace jirafrelance.Migrations
{
    [DbContext(typeof(JiraContext))]
    [Migration("20190917202523_dateprvnttranct")]
    partial class dateprvnttranct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("jirafrelance.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<int>("Balance");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<int>("County");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<int>("IdNumber");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("ProfileExpertiseOverview");

                    b.Property<string>("ProfileFeaturedWork");

                    b.Property<string>("ProfilePhoto");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<int>("gender");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("jirafrelance.Models.Massage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at");

                    b.Property<string>("message");

                    b.Property<string>("reciever_id");

                    b.Property<string>("sender_id");

                    b.HasKey("MessageId");

                    b.HasIndex("reciever_id");

                    b.HasIndex("sender_id");

                    b.ToTable("tbl_massages");
                });

            modelBuilder.Entity("jirafrelance.Models.TblBid", b =>
                {
                    b.Property<int>("PkBidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_bid_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BidAwardTime")
                        .HasColumnName("bid_award_time")
                        .HasMaxLength(100);

                    b.Property<string>("BidOfferInformation")
                        .IsRequired()
                        .HasColumnName("bid_offer_information")
                        .HasColumnType("text");

                    b.Property<string>("BidStatus")
                        .IsRequired()
                        .HasColumnName("bid_status")
                        .HasMaxLength(20);

                    b.Property<string>("BidTime")
                        .IsRequired()
                        .HasColumnName("bid_time")
                        .HasMaxLength(50);

                    b.Property<string>("FkBidUser")
                        .IsRequired()
                        .HasColumnName("fk_bid_user");

                    b.Property<int>("FkJobBidded")
                        .HasColumnName("fk_job_bidded");

                    b.Property<int?>("TblUserPkUserId");

                    b.HasKey("PkBidId");

                    b.HasIndex("FkBidUser");

                    b.HasIndex("FkJobBidded");

                    b.HasIndex("TblUserPkUserId");

                    b.ToTable("tbl_bid");
                });

            modelBuilder.Entity("jirafrelance.Models.TblChatBid", b =>
                {
                    b.Property<int>("PkBidChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_bid_chat_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BidChatMessage")
                        .IsRequired()
                        .HasColumnName("bid_chat_message")
                        .HasColumnType("text");

                    b.Property<string>("BidChatSender")
                        .IsRequired()
                        .HasColumnName("bid_chat_sender")
                        .HasMaxLength(20);

                    b.Property<string>("BidChatStatus")
                        .IsRequired()
                        .HasColumnName("bid_chat_status")
                        .HasMaxLength(10);

                    b.Property<string>("BidChatTimeRead")
                        .HasColumnName("bid_chat_time_read")
                        .HasMaxLength(20);

                    b.Property<string>("BidChatTimeSent")
                        .IsRequired()
                        .HasColumnName("bid_chat_time_sent")
                        .HasMaxLength(20);

                    b.Property<int>("FkBidChatBidding")
                        .HasColumnName("fk_bid_chat_bidding");

                    b.Property<string>("FkBidChatUser")
                        .HasColumnName("fk_bid_chat_user");

                    b.Property<int?>("TblSupportAdminPkSupportAdminId");

                    b.Property<int?>("TblUserPkUserId");

                    b.HasKey("PkBidChatId")
                        .HasName("PK_tbl_bid_chat");

                    b.HasIndex("FkBidChatBidding");

                    b.HasIndex("FkBidChatUser");

                    b.HasIndex("TblSupportAdminPkSupportAdminId");

                    b.HasIndex("TblUserPkUserId");

                    b.ToTable("tbl_chat_bid");
                });

            modelBuilder.Entity("jirafrelance.Models.TblChatDirect", b =>
                {
                    b.Property<int>("PkDirectChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_direct_chat_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DirectChatMessage")
                        .IsRequired()
                        .HasColumnName("direct_chat_message")
                        .HasColumnType("text");

                    b.Property<string>("DirectChatSender")
                        .IsRequired()
                        .HasColumnName("direct_chat_sender")
                        .HasMaxLength(20);

                    b.Property<string>("DirectChatStatus")
                        .IsRequired()
                        .HasColumnName("direct_chat_status")
                        .HasMaxLength(10);

                    b.Property<string>("DirectChatTimeRead")
                        .HasColumnName("direct_chat_time_read")
                        .HasMaxLength(20);

                    b.Property<string>("DirectChatTimeSent")
                        .IsRequired()
                        .HasColumnName("direct_chat_time_sent")
                        .HasMaxLength(20);

                    b.Property<string>("FkDirectChatEmployer")
                        .HasColumnName("fk_direct_chat_employer");

                    b.Property<int?>("TblEmployerPkEmpId");

                    b.Property<int?>("TblSupportAdminPkSupportAdminId");

                    b.HasKey("PkDirectChatId");

                    b.HasIndex("FkDirectChatEmployer");

                    b.HasIndex("TblEmployerPkEmpId");

                    b.HasIndex("TblSupportAdminPkSupportAdminId");

                    b.ToTable("tbl_chat_direct");
                });

            modelBuilder.Entity("jirafrelance.Models.TblChatWorkspace", b =>
                {
                    b.Property<int>("PkWkspChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_wksp_chat_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FkWkspChatUser")
                        .HasColumnName("fk_wksp_chat_user");

                    b.Property<int>("FkWkspChatWorkspace")
                        .HasColumnName("fk_wksp_chat_workspace");

                    b.Property<int?>("TblEmployerPkEmpId");

                    b.Property<int?>("TblUserPkUserId");

                    b.Property<string>("WkspChatMessage")
                        .IsRequired()
                        .HasColumnName("wksp_chat_message")
                        .HasColumnType("text");

                    b.Property<string>("WkspChatSender")
                        .IsRequired()
                        .HasColumnName("wksp_chat_sender")
                        .HasMaxLength(20);

                    b.Property<string>("WkspChatStatus")
                        .IsRequired()
                        .HasColumnName("wksp_chat_status")
                        .HasMaxLength(10);

                    b.Property<string>("WkspChatTimeRead")
                        .HasColumnName("wksp_chat_time_read")
                        .HasMaxLength(20);

                    b.Property<string>("WkspChatTimeSent")
                        .IsRequired()
                        .HasColumnName("wksp_chat_time_sent")
                        .HasMaxLength(20);

                    b.HasKey("PkWkspChatId");

                    b.HasIndex("FkWkspChatUser");

                    b.HasIndex("FkWkspChatWorkspace");

                    b.HasIndex("TblEmployerPkEmpId");

                    b.HasIndex("TblUserPkUserId");

                    b.ToTable("tbl_chat_workspace");
                });

            modelBuilder.Entity("jirafrelance.Models.TblDepositDeduction", b =>
                {
                    b.Property<int>("PkDepositDeductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_deposit_deduction_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepositDeductionAmount")
                        .IsRequired()
                        .HasColumnName("deposit_deduction_amount")
                        .HasMaxLength(20);

                    b.Property<string>("DepositDeductionDescription")
                        .HasColumnName("deposit_deduction_description")
                        .HasColumnType("text");

                    b.Property<int>("FkDepositDeductionHistory")
                        .HasColumnName("fk_deposit_deduction_history");

                    b.HasKey("PkDepositDeductionId");

                    b.HasIndex("FkDepositDeductionHistory");

                    b.ToTable("tbl_deposit_deduction");
                });

            modelBuilder.Entity("jirafrelance.Models.TblDispute", b =>
                {
                    b.Property<int>("PkDisptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_dispt_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisptConclusionTime")
                        .HasColumnName("dispt_conclusion_time")
                        .HasMaxLength(20);

                    b.Property<string>("DisptOutcome")
                        .HasColumnName("dispt_outcome")
                        .HasColumnType("text");

                    b.Property<string>("DisptRaiseTime")
                        .IsRequired()
                        .HasColumnName("dispt_raise_time")
                        .HasMaxLength(20);

                    b.Property<string>("DisptReason")
                        .IsRequired()
                        .HasColumnName("dispt_reason")
                        .HasColumnType("text");

                    b.Property<string>("DisptStatus")
                        .IsRequired()
                        .HasColumnName("dispt_status")
                        .HasMaxLength(50);

                    b.Property<int>("FkDisptWorkspace")
                        .HasColumnName("fk_dispt_workspace");

                    b.HasKey("PkDisptId");

                    b.HasIndex("FkDisptWorkspace");

                    b.ToTable("tbl_dispute");
                });

            modelBuilder.Entity("jirafrelance.Models.TblEmployer", b =>
                {
                    b.Property<int>("PkEmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_emp_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpBalance")
                        .IsRequired()
                        .HasColumnName("emp_balance")
                        .HasMaxLength(20);

                    b.Property<string>("EmpEmail")
                        .IsRequired()
                        .HasColumnName("emp_email")
                        .HasMaxLength(100);

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasColumnName("emp_name")
                        .HasMaxLength(100);

                    b.Property<string>("EmpPhone")
                        .HasColumnName("emp_phone")
                        .HasMaxLength(50);

                    b.HasKey("PkEmpId");

                    b.ToTable("tbl_employer");
                });

            modelBuilder.Entity("jirafrelance.Models.TblEmployerCompany", b =>
                {
                    b.Property<int>("PkCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_company_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnName("company_name")
                        .HasMaxLength(150);

                    b.Property<string>("EmployerIndustry")
                        .IsRequired()
                        .HasColumnName("employer_industry")
                        .HasMaxLength(100);

                    b.Property<string>("FkCompanyEmployer")
                        .HasColumnName("fk_company_employer");

                    b.Property<int?>("TblEmployerPkEmpId");

                    b.HasKey("PkCompanyId");

                    b.HasIndex("FkCompanyEmployer");

                    b.HasIndex("TblEmployerPkEmpId");

                    b.ToTable("tbl_employer_company");
                });

            modelBuilder.Entity("jirafrelance.Models.TblEmployerDepositHistory", b =>
                {
                    b.Property<int>("PkDepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_deposit_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepositAmount")
                        .IsRequired()
                        .HasColumnName("deposit_amount")
                        .HasMaxLength(20);

                    b.Property<string>("DepositBalance")
                        .IsRequired()
                        .HasColumnName("deposit_balance")
                        .HasMaxLength(20);

                    b.Property<string>("DepositDate")
                        .IsRequired()
                        .HasColumnName("deposit_date")
                        .HasMaxLength(20);

                    b.Property<string>("DepositDeductions")
                        .IsRequired()
                        .HasColumnName("deposit_deductions")
                        .HasMaxLength(20);

                    b.Property<string>("DepositDescription")
                        .HasColumnName("deposit_description")
                        .HasColumnType("text");

                    b.Property<string>("FinalDepositAmount")
                        .IsRequired()
                        .HasColumnName("final_deposit_amount")
                        .HasMaxLength(20);

                    b.Property<string>("FkDepositEmployer")
                        .HasColumnName("fk_deposit_employer");

                    b.Property<int?>("TblEmployerPkEmpId");

                    b.HasKey("PkDepositId")
                        .HasName("PK_tbl_employer_deposit");

                    b.HasIndex("FkDepositEmployer");

                    b.HasIndex("TblEmployerPkEmpId");

                    b.ToTable("tbl_employer_deposit_history");
                });

            modelBuilder.Entity("jirafrelance.Models.TblJob", b =>
                {
                    b.Property<int>("PkJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_job_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FkJobEmployer")
                        .HasColumnName("fk_job_employer");

                    b.Property<string>("JobBudget")
                        .IsRequired()
                        .HasColumnName("job_budget")
                        .HasMaxLength(50);

                    b.Property<string>("JobCategory")
                        .IsRequired()
                        .HasColumnName("job_category")
                        .HasMaxLength(100);

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnName("job_description")
                        .HasColumnType("text");

                    b.Property<string>("JobDuration")
                        .IsRequired()
                        .HasColumnName("job_duration")
                        .HasMaxLength(50);

                    b.Property<string>("JobStatus")
                        .IsRequired()
                        .HasColumnName("job_status")
                        .HasMaxLength(20);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnName("job_title")
                        .HasMaxLength(200);

                    b.Property<int?>("TblEmployerPkEmpId");

                    b.HasKey("PkJobId");

                    b.HasIndex("FkJobEmployer");

                    b.HasIndex("TblEmployerPkEmpId");

                    b.ToTable("tbl_job");
                });

            modelBuilder.Entity("jirafrelance.Models.TblJobAttachment", b =>
                {
                    b.Property<int>("PkJobAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_job_attachment_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkAttachmentJob")
                        .HasColumnName("fk_attachment_job");

                    b.Property<string>("JobAttachmentDownloadName")
                        .IsRequired()
                        .HasColumnName("job_attachment_download_name")
                        .HasMaxLength(300);

                    b.Property<string>("JobAttachmentFileName")
                        .IsRequired()
                        .HasColumnName("job_attachment_file_name")
                        .HasMaxLength(300);

                    b.Property<string>("JobAttachmentFilePath")
                        .IsRequired()
                        .HasColumnName("job_attachment_file_path")
                        .HasMaxLength(500);

                    b.HasKey("PkJobAttachmentId");

                    b.HasIndex("FkAttachmentJob");

                    b.ToTable("tbl_job_attachment");
                });

            modelBuilder.Entity("jirafrelance.Models.TblPaymentDeduction", b =>
                {
                    b.Property<int>("PkPayDeductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_pay_deduction_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkPayDeductionHistory")
                        .HasColumnName("fk_pay_deduction_history");

                    b.Property<string>("PayDeductionAmount")
                        .IsRequired()
                        .HasColumnName("pay_deduction_amount")
                        .HasMaxLength(20);

                    b.Property<string>("PayDeductionDescription")
                        .HasColumnName("pay_deduction_description")
                        .HasColumnType("text");

                    b.HasKey("PkPayDeductionId");

                    b.HasIndex("FkPayDeductionHistory");

                    b.ToTable("tbl_payment_deduction");
                });

            modelBuilder.Entity("jirafrelance.Models.TblProfile", b =>
                {
                    b.Property<int>("PkProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_profile_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FkProfileUser")
                        .HasColumnName("fk_profile_user");

                    b.Property<string>("ProfileExpertiseOverview")
                        .HasColumnName("profile_expertise_overview")
                        .HasColumnType("text");

                    b.Property<string>("ProfileFeaturedWork")
                        .HasColumnName("profile_featured_work")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnName("profile_photo")
                        .HasMaxLength(20);

                    b.Property<int?>("TblUserPkUserId");

                    b.HasKey("PkProfileId");

                    b.HasIndex("FkProfileUser");

                    b.HasIndex("TblUserPkUserId");

                    b.ToTable("tbl_profile");
                });

            modelBuilder.Entity("jirafrelance.Models.TblSupportAdmin", b =>
                {
                    b.Property<int>("PkSupportAdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_support_admin_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SupportAdminEmail")
                        .IsRequired()
                        .HasColumnName("support_admin_email")
                        .HasMaxLength(100);

                    b.Property<string>("SupportAdminFname")
                        .IsRequired()
                        .HasColumnName("support_admin_fname")
                        .HasMaxLength(100);

                    b.Property<string>("SupportAdminPassword")
                        .IsRequired()
                        .HasColumnName("support_admin_password")
                        .HasMaxLength(200);

                    b.Property<string>("SupportAdminPhone")
                        .IsRequired()
                        .HasColumnName("support_admin_phone")
                        .HasMaxLength(20);

                    b.Property<string>("SupportAdminUsername")
                        .IsRequired()
                        .HasColumnName("support_admin_username")
                        .HasMaxLength(30);

                    b.HasKey("PkSupportAdminId");

                    b.ToTable("tbl_support_admin");
                });

            modelBuilder.Entity("jirafrelance.Models.TblUser", b =>
                {
                    b.Property<int>("PkUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_user_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserBalance")
                        .IsRequired()
                        .HasColumnName("user_balance")
                        .HasMaxLength(10);

                    b.Property<string>("UserCounty")
                        .IsRequired()
                        .HasColumnName("user_county")
                        .HasMaxLength(30);

                    b.Property<string>("UserDateOfBirth")
                        .IsRequired()
                        .HasColumnName("user_date_of_birth")
                        .HasMaxLength(20);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnName("user_email")
                        .HasMaxLength(70);

                    b.Property<string>("UserGender")
                        .IsRequired()
                        .HasColumnName("user_gender")
                        .HasMaxLength(15);

                    b.Property<string>("UserIdNumber")
                        .HasColumnName("user_id_number")
                        .HasMaxLength(30);

                    b.Property<string>("UserPhone")
                        .HasColumnName("user_phone")
                        .HasMaxLength(30);

                    b.HasKey("PkUserId");

                    b.ToTable("tbl_user");
                });

            modelBuilder.Entity("jirafrelance.Models.TblUserCertification", b =>
                {
                    b.Property<int>("PkCertificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_certification_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CertificationName")
                        .IsRequired()
                        .HasColumnName("certification_name")
                        .HasMaxLength(10);

                    b.Property<string>("FkCertificationUserId")
                        .HasColumnName("fk_certification_user_id");

                    b.Property<int?>("TblUserPkUserId");

                    b.HasKey("PkCertificationId");

                    b.HasIndex("FkCertificationUserId");

                    b.HasIndex("TblUserPkUserId");

                    b.ToTable("tbl_user_certification");
                });

            modelBuilder.Entity("jirafrelance.Models.TblUserPaymentHistory", b =>
                {
                    b.Property<int>("PkPayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_pay_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FinalPay")
                        .IsRequired()
                        .HasColumnName("final_pay")
                        .HasMaxLength(20);

                    b.Property<int>("FkWorkspacePay")
                        .HasColumnName("fk_workspace_pay");

                    b.Property<string>("PayAmount")
                        .IsRequired()
                        .HasColumnName("pay_amount")
                        .HasMaxLength(20);

                    b.Property<string>("PayBalance")
                        .IsRequired()
                        .HasColumnName("pay_balance")
                        .HasMaxLength(20);

                    b.Property<string>("PayDate")
                        .IsRequired()
                        .HasColumnName("pay_date")
                        .HasMaxLength(20);

                    b.Property<string>("PayDeductions")
                        .IsRequired()
                        .HasColumnName("pay_deductions")
                        .HasMaxLength(20);

                    b.Property<string>("PayDescription")
                        .HasColumnName("pay_description")
                        .HasColumnType("text");

                    b.HasKey("PkPayId");

                    b.HasIndex("FkWorkspacePay");

                    b.ToTable("tbl_user_payment_history");
                });

            modelBuilder.Entity("jirafrelance.Models.TblUserSkill", b =>
                {
                    b.Property<int>("PkSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_skill_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FkSkillUserId")
                        .HasColumnName("fk_skill_user_id");

                    b.Property<int?>("TblUserPkUserId");

                    b.Property<string>("UserSkillName")
                        .IsRequired()
                        .HasColumnName("user_skill_name")
                        .HasColumnType("text");

                    b.HasKey("PkSkillId");

                    b.HasIndex("FkSkillUserId");

                    b.HasIndex("TblUserPkUserId");

                    b.ToTable("tbl_user_skill");
                });

            modelBuilder.Entity("jirafrelance.Models.TblWorkspace", b =>
                {
                    b.Property<int>("PkWkspcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pk_wkspc_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkWkspcBid")
                        .HasColumnName("fk_wkspc_bid");

                    b.Property<string>("WkspcActualEndTime")
                        .HasColumnName("wkspc_actual_end_time")
                        .HasMaxLength(20);

                    b.Property<string>("WkspcAmountAgreed")
                        .IsRequired()
                        .HasColumnName("wkspc_amount_agreed")
                        .HasMaxLength(20);

                    b.Property<string>("WkspcExpectendEndTime")
                        .IsRequired()
                        .HasColumnName("wkspc_expectend_end_time")
                        .HasMaxLength(20);

                    b.Property<string>("WkspcFeedback")
                        .HasColumnName("wkspc_feedback")
                        .HasColumnType("text");

                    b.Property<string>("WkspcRating")
                        .HasColumnName("wkspc_rating")
                        .HasMaxLength(10);

                    b.Property<string>("WkspcStartTime")
                        .IsRequired()
                        .HasColumnName("wkspc_start_time")
                        .HasMaxLength(20);

                    b.Property<string>("WkspcStatus")
                        .IsRequired()
                        .HasColumnName("wkspc_status")
                        .HasMaxLength(20);

                    b.HasKey("PkWkspcId");

                    b.HasIndex("FkWkspcBid");

                    b.ToTable("tbl_workspace");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("jirafrelance.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("jirafrelance.Models.Massage", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkReciever")
                        .WithMany()
                        .HasForeignKey("reciever_id");

                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkSender")
                        .WithMany("massages")
                        .HasForeignKey("sender_id")
                        .HasConstraintName("FK__tbl_mass__fk_se__6477ECF3");
                });

            modelBuilder.Entity("jirafrelance.Models.TblBid", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkBidUserNavigation")
                        .WithMany("TblBid")
                        .HasForeignKey("FkBidUser")
                        .HasConstraintName("FK__tbl_bid__fk_bid___59FA5E80");

                    b.HasOne("jirafrelance.Models.TblJob", "FkJobBiddedNavigation")
                        .WithMany("TblBid")
                        .HasForeignKey("FkJobBidded")
                        .HasConstraintName("FK__tbl_bid__fk_job___5AEE82B9");

                    b.HasOne("jirafrelance.Models.TblUser")
                        .WithMany("TblBid")
                        .HasForeignKey("TblUserPkUserId");
                });

            modelBuilder.Entity("jirafrelance.Models.TblChatBid", b =>
                {
                    b.HasOne("jirafrelance.Models.TblBid", "FkBidChatBiddingNavigation")
                        .WithMany("TblChatBid")
                        .HasForeignKey("FkBidChatBidding")
                        .HasConstraintName("FK__tbl_chat___fk_bi__5CD6CB2B");

                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkBidChatUserNavigation")
                        .WithMany("TblChatBid")
                        .HasForeignKey("FkBidChatUser")
                        .HasConstraintName("FK__tbl_chat___fk_bi__5BE2A6F2");

                    b.HasOne("jirafrelance.Models.TblSupportAdmin")
                        .WithMany("TblChatBid")
                        .HasForeignKey("TblSupportAdminPkSupportAdminId");

                    b.HasOne("jirafrelance.Models.TblUser")
                        .WithMany("TblChatBid")
                        .HasForeignKey("TblUserPkUserId");
                });

            modelBuilder.Entity("jirafrelance.Models.TblChatDirect", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkDirectChatEmployerNavigation")
                        .WithMany("TblChatDirect")
                        .HasForeignKey("FkDirectChatEmployer")
                        .HasConstraintName("FK__tbl_chat___fk_di__5FB337D6");

                    b.HasOne("jirafrelance.Models.TblEmployer")
                        .WithMany("TblChatDirect")
                        .HasForeignKey("TblEmployerPkEmpId");

                    b.HasOne("jirafrelance.Models.TblSupportAdmin")
                        .WithMany("TblChatDirect")
                        .HasForeignKey("TblSupportAdminPkSupportAdminId");
                });

            modelBuilder.Entity("jirafrelance.Models.TblChatWorkspace", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkWkspChatUserNavigation")
                        .WithMany("TblChatWorkspace")
                        .HasForeignKey("FkWkspChatUser")
                        .HasConstraintName("FK__tbl_chat___fk_wk__6383C8BA");

                    b.HasOne("jirafrelance.Models.TblWorkspace", "FkWkspChatWorkspaceNavigation")
                        .WithMany("TblChatWorkspace")
                        .HasForeignKey("FkWkspChatWorkspace")
                        .HasConstraintName("FK__tbl_chat___fk_wk__60A75C0F");

                    b.HasOne("jirafrelance.Models.TblEmployer")
                        .WithMany("TblChatWorkspace")
                        .HasForeignKey("TblEmployerPkEmpId");

                    b.HasOne("jirafrelance.Models.TblUser")
                        .WithMany("TblChatWorkspace")
                        .HasForeignKey("TblUserPkUserId");
                });

            modelBuilder.Entity("jirafrelance.Models.TblDepositDeduction", b =>
                {
                    b.HasOne("jirafrelance.Models.TblEmployerDepositHistory", "FkDepositDeductionHistoryNavigation")
                        .WithMany("TblDepositDeduction")
                        .HasForeignKey("FkDepositDeductionHistory")
                        .HasConstraintName("FK__tbl_depos__fk_de__6477ECF3");
                });

            modelBuilder.Entity("jirafrelance.Models.TblDispute", b =>
                {
                    b.HasOne("jirafrelance.Models.TblWorkspace", "FkDisptWorkspaceNavigation")
                        .WithMany("TblDispute")
                        .HasForeignKey("FkDisptWorkspace")
                        .HasConstraintName("FK__tbl_dispu__fk_di__656C112C");
                });

            modelBuilder.Entity("jirafrelance.Models.TblEmployerCompany", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkCompanyEmployerNavigation")
                        .WithMany("TblEmployerCompany")
                        .HasForeignKey("FkCompanyEmployer")
                        .HasConstraintName("FK__tbl_emplo__fk_co__66603565");

                    b.HasOne("jirafrelance.Models.TblEmployer")
                        .WithMany("TblEmployerCompany")
                        .HasForeignKey("TblEmployerPkEmpId");
                });

            modelBuilder.Entity("jirafrelance.Models.TblEmployerDepositHistory", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkDepositEmployerNavigation")
                        .WithMany("TblEmployerDepositHistory")
                        .HasForeignKey("FkDepositEmployer")
                        .HasConstraintName("FK__tbl_emplo__fk_de__6754599E");

                    b.HasOne("jirafrelance.Models.TblEmployer")
                        .WithMany("TblEmployerDepositHistory")
                        .HasForeignKey("TblEmployerPkEmpId");
                });

            modelBuilder.Entity("jirafrelance.Models.TblJob", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkJobEmployerNavigation")
                        .WithMany("TblJob")
                        .HasForeignKey("FkJobEmployer")
                        .HasConstraintName("FK__tbl_job__fk_job___68487DD7");

                    b.HasOne("jirafrelance.Models.TblEmployer")
                        .WithMany("TblJob")
                        .HasForeignKey("TblEmployerPkEmpId");
                });

            modelBuilder.Entity("jirafrelance.Models.TblJobAttachment", b =>
                {
                    b.HasOne("jirafrelance.Models.TblJob", "FkAttachmentJobNavigation")
                        .WithMany("TblJobAttachment")
                        .HasForeignKey("FkAttachmentJob")
                        .HasConstraintName("FK__tbl_job_a__fk_at__693CA210");
                });

            modelBuilder.Entity("jirafrelance.Models.TblPaymentDeduction", b =>
                {
                    b.HasOne("jirafrelance.Models.TblUserPaymentHistory", "FkPayDeductionHistoryNavigation")
                        .WithMany("TblPaymentDeduction")
                        .HasForeignKey("FkPayDeductionHistory")
                        .HasConstraintName("FK__tbl_payme__fk_pa__6A30C649");
                });

            modelBuilder.Entity("jirafrelance.Models.TblProfile", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkProfileUserNavigation")
                        .WithMany("TblProfile")
                        .HasForeignKey("FkProfileUser")
                        .HasConstraintName("FK__tbl_profi__fk_pr__6B24EA82");

                    b.HasOne("jirafrelance.Models.TblUser")
                        .WithMany("TblProfile")
                        .HasForeignKey("TblUserPkUserId");
                });

            modelBuilder.Entity("jirafrelance.Models.TblUserCertification", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkCertificationUser")
                        .WithMany("TblUserCertification")
                        .HasForeignKey("FkCertificationUserId")
                        .HasConstraintName("FK__tbl_user___fk_ce__6C190EBB");

                    b.HasOne("jirafrelance.Models.TblUser")
                        .WithMany("TblUserCertification")
                        .HasForeignKey("TblUserPkUserId");
                });

            modelBuilder.Entity("jirafrelance.Models.TblUserPaymentHistory", b =>
                {
                    b.HasOne("jirafrelance.Models.TblWorkspace", "FkWorkspacePayNavigation")
                        .WithMany("TblUserPaymentHistory")
                        .HasForeignKey("FkWorkspacePay")
                        .HasConstraintName("FK__tbl_user___fk_wo__6D0D32F4");
                });

            modelBuilder.Entity("jirafrelance.Models.TblUserSkill", b =>
                {
                    b.HasOne("jirafrelance.Models.ApplicationUser", "FkSkillUser")
                        .WithMany("TblUserSkill")
                        .HasForeignKey("FkSkillUserId")
                        .HasConstraintName("FK__tbl_user___fk_sk__6E01572D");

                    b.HasOne("jirafrelance.Models.TblUser")
                        .WithMany("TblUserSkill")
                        .HasForeignKey("TblUserPkUserId");
                });

            modelBuilder.Entity("jirafrelance.Models.TblWorkspace", b =>
                {
                    b.HasOne("jirafrelance.Models.TblBid", "FkWkspcB")
                        .WithMany("TblWorkspace")
                        .HasForeignKey("FkWkspcBid")
                        .HasConstraintName("FK__tbl_works__fk_wk__6EF57B66");
                });
#pragma warning restore 612, 618
        }
    }
}
